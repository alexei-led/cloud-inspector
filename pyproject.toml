[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloud-inspector"
version = "0.1.0"
description = "A tool for comparing LLM code generation capabilities for cloud inspection tasks"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "autopep8",
    "autoflake",
    "black",
    "boto3",
    "click",
    "docker",
    "langchain",
    "langchain_openai",
    "langchain_anthropic",
    "langchain_aws",
    "langchain_ollama",
    "langchain-google-genai",
    "langgraph",
    "langsmith",
    "libcst",
    "pydantic",
    "pyyaml",
    "tabulate",
]

[project.scripts]
cloud-inspector = "cloud_inspector.cli:cli"

[project.optional-dependencies]
dev = [
    "aider-chat",
    "flask",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-asyncio",
    "pytest-timeout",
    "pytest-xdist",
    "ruff",
    "setuptools",
]

[tool.ruff]
line-length = 240

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyright]
typeCheckingMode = "standard"
venvPath = "."
venv = ".venv"
exclude = [".venv", "./generated_code", "./generated_prompts"]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["cloud_inspector*"]
namespaces = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
# Add more detailed test settings
addopts = """
    -v
    --tb=short
    -ra
    -q
    --cov=cloud_inspector
    --cov-report=term-missing
    --cov-report=html
    --asyncio-mode=strict
"""
pythonpath = ["src"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
]
# Add timeout settings
timeout = 300

[tool.coverage.run]
source = ["cloud_inspector"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
